-- 1. 机构表设计

-- 一级机构表
CREATE TABLE level_1_organizations (
    level_1_id INT PRIMARY KEY,
    level_1_name VARCHAR(100) NOT NULL
);

-- 二级机构表
CREATE TABLE level_2_organizations (
    level_2_id INT PRIMARY KEY,
    level_1_id INT NOT NULL,
    level_2_name VARCHAR(100) NOT NULL,
    FOREIGN KEY (level_1_id) REFERENCES level_1_organizations(level_1_id) ON DELETE CASCADE
);

-- 三级机构表
CREATE TABLE level_3_organizations (
    level_3_id INT PRIMARY KEY,
    level_2_id INT NOT NULL,
    level_3_name VARCHAR(100) NOT NULL,
    FOREIGN KEY (level_2_id) REFERENCES level_2_organizations(level_2_id) ON DELETE CASCADE
);

-- 2. 职位与员工档案表设计

-- 职位分类表
CREATE TABLE position_categories (
    category_id INT PRIMARY KEY,
    category_name VARCHAR(100) NOT NULL
);

-- 职位表
CREATE TABLE positions (
    position_id INT PRIMARY KEY,
    category_id INT NOT NULL,
    position_name VARCHAR(100) NOT NULL,
    FOREIGN KEY (category_id) REFERENCES position_categories(category_id)
);

-- 员工档案表
CREATE TABLE employee_records (
    record_id VARCHAR(20) PRIMARY KEY,
    employee_name VARCHAR(50) NOT NULL,
    gender VARCHAR(10),
    email VARCHAR(100),
    mobile VARCHAR(15),
    address VARCHAR(255),
    age INT,
    education_level VARCHAR(20),
    major VARCHAR(100),
    salary_standard DECIMAL(10, 2),
    bank VARCHAR(100),
    account_number VARCHAR(30),
    personal_history TEXT,
    created_by INT,
    created_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('正常', '待复核', '已删除'),
    level_1_id INT,
    level_2_id INT,
    level_3_id INT,
    category_id INT,
    position_id INT,
    photo_url VARCHAR(255),
    FOREIGN KEY (level_1_id) REFERENCES level_1_organizations(level_1_id) ON DELETE SET NULL,
    FOREIGN KEY (level_2_id) REFERENCES level_2_organizations(level_2_id) ON DELETE SET NULL,
    FOREIGN KEY (level_3_id) REFERENCES level_3_organizations(level_3_id) ON DELETE SET NULL,
    FOREIGN KEY (category_id) REFERENCES position_categories(category_id) ON DELETE SET NULL,
    FOREIGN KEY (position_id) REFERENCES positions(position_id) ON DELETE SET NULL
);

-- 3. 薪酬管理模块设计

-- 角色表
CREATE TABLE role (
    role_id INT PRIMARY KEY AUTO_INCREMENT,
    role_name VARCHAR(255) UNIQUE NOT NULL
);

-- 用户表
CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    user_name VARCHAR(255) UNIQUE NOT NULL,
    user_password VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role(role_id) ON DELETE RESTRICT
);

-- 薪酬标准表
CREATE TABLE salary_standard (
    salary_standard_id INT PRIMARY KEY AUTO_INCREMENT,
    standard_name VARCHAR(255) NOT NULL,
    creator VARCHAR(255) NOT NULL,
    registrar VARCHAR(255) NOT NULL,
    registration_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    review_comment TEXT,
    status ENUM('待登记', '待复核', '已复核') NOT NULL,
    base_salary DECIMAL(10, 2) NOT NULL,
    pension_insurance DECIMAL(10, 2) GENERATED ALWAYS AS (base_salary * 0.08) STORED,
    medical_insurance DECIMAL(10, 2) GENERATED ALWAYS AS (base_salary * 0.02) STORED,
    unemployment_insurance DECIMAL(10, 2) GENERATED ALWAYS AS (base_salary * 0.01) STORED,
    housing_fund DECIMAL(10, 2) GENERATED ALWAYS AS (base_salary * 0.07) STORED
);

-- 薪酬发放表
CREATE TABLE salary_distribution (
    distribution_id INT PRIMARY KEY AUTO_INCREMENT,
    level_1_id INT NOT NULL,
    level_2_id INT NOT NULL,
    level_3_id INT NOT NULL,
    number_of_employees INT NOT NULL,
    total_base_salary DECIMAL(10, 2) NOT NULL,
    status ENUM('待登记', '待复核', '已复核') NOT NULL,
    registrar VARCHAR(255) NOT NULL,
    FOREIGN KEY (level_1_id) REFERENCES level_1_organizations(level_1_id) ON DELETE CASCADE,
    FOREIGN KEY (level_2_id) REFERENCES level_2_organizations(level_2_id) ON DELETE CASCADE,
    FOREIGN KEY (level_3_id) REFERENCES level_3_organizations(level_3_id) ON DELETE CASCADE
);

-- 员工薪酬表
CREATE TABLE employee_compensation (
    employee_id VARCHAR(20) PRIMARY KEY,
    salary_standard_id INT NOT NULL,
    allowances DECIMAL(10, 2) DEFAULT 0.00,
    bonus DECIMAL(10, 2) DEFAULT 0.00,
    deductions DECIMAL(10, 2) DEFAULT 0.00,
    distribution_id INT,
    FOREIGN KEY (employee_id) REFERENCES employee_records(record_id) ON DELETE CASCADE,
    FOREIGN KEY (salary_standard_id) REFERENCES salary_standard(salary_standard_id) ON DELETE CASCADE,
    FOREIGN KEY (distribution_id) REFERENCES salary_distribution(distribution_id) ON DELETE SET NULL
);



-- 示例数据
INSERT INTO level_1_organizations (level_1_id, level_1_name) VALUES
(1, '研发中心'),
(2, '市场部'),
(3, '人力资源部'),
(4, '财务部'),
(5, '客服部');

-- 示例数据
INSERT INTO level_2_organizations (level_2_id, level_1_id, level_2_name) VALUES
(1, 1, '软件研发部'),
(2, 1, '硬件研发部'),
(3, 2, '市场推广部'),
(4, 2, '品牌管理部'),
(5, 3, '招聘部'),
(6, 3, '员工关系部'),
(7, 4, '财务会计部'),
(8, 4, '审计部'),
(9, 5, '客户支持部'),
(10, 5, '技术支持部');

-- 示例数据
INSERT INTO level_3_organizations (level_3_id, level_2_id, level_3_name) VALUES
(1, 1, '前端开发组'),
(2, 1, '后端开发组'),
(3, 2, '硬件设计组'),
(4, 3, '区域市场组'),
(5, 3, '线上推广组'),
(6, 4, '品牌策划组'),
(7, 5, '校园招聘组'),
(8, 5, '社会招聘组'),
(9, 6, '员工福利组'),
(10, 7, '固定资产管理组'),
(11, 8, '内部审计组'),
(12, 9, '一线支持组'),
(13, 10, '二线支持组');

-- 示例数据
INSERT INTO position_categories (category_id, category_name) VALUES
(1, '技术类'),
(2, '管理类'),
(3, '市场类'),
(4, '财务类'),
(5, '客服类');

-- 示例数据
INSERT INTO positions (position_id, category_id, position_name) VALUES
(1, 1, '前端开发工程师'),
(2, 1, '后端开发工程师'),
(3, 1, '系统架构师'),
(4, 2, '项目经理'),
(5, 2, '部门经理'),
(6, 3, '市场经理'),
(7, 3, '市场专员'),
(8, 4, '财务分析师'),
(9, 4, '审计师'),
(10, 5, '客服经理'),
(11, 5, '客服专员');
